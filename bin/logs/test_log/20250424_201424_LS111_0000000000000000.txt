Test Time: 2025-04-24 20:14:24
Device SN: LS111
Device ID: 0000000000000000
====================================

Table Content:
-----------------------------------
测试项目	测试模式	测试内容	进度	结果	备注
 扫码SN	 自动		100%	正常	
 烧录ap	 自动		20%	未测试	
 烧录cp	 自动		20%	未测试	
 烧录资源	 自动		20%	未测试	
 检测adb设备	 自动	设备ID：0000000000000000	100%	正常	
 快速上下电（100ms）	 自动	设备ID：0000000000000000	100%	正常	
 供电3.5V读取静态功耗	 自动	平均电流: 220.379 mA (正常)	100%	正常	
 供电4V读取静态功耗	 自动	平均电流: 211.328 mA (正常)	100%	正常	
 供电5V读取静态功耗	 自动	平均电流: 200.702 mA (正常)	100%	正常	
 供电3.5V开发板上电时间	 自动	上电耗时: 81 ms	100%	正常	
 供电4V开发板上电时间	 自动	上电耗时: 82 ms	100%	正常	
 供电5V开发板上电时间	 自动	上电耗时: 82 ms	100%	正常	
 满载的静态功耗	 自动	平均电流: 219.604 mA (正常)	100%	正常	
 息屏的静态功耗	 自动	平均电流: 138.171 mA (正常)	100%	正常	
 软件复位	 自动	软复位成功，检测到版本信息	100%	正常	
 看门狗复位	 自动	软复位成功，检测到版本信息	100%	正常	
 WIFI 扫描	 自动	未检测到gxw网络	100%	异常	
 自播自录	 自动	最大频率值: 通道0: 976Hz, 通道1: 976Hz, 通道2: 976Hz, 通道3: 976Hz (不通过)	100%	异常	
 adb push  pull (20MB)	 自动	ADB push/pull测试成功，MD5匹配e59ee84fc5710391fd7c8d47676b695b	100%	正常	
 准备进入手动模式	 提示	进入手动模式	100%	正常	
 调节背光为20	 手动	调节背光为20，判断背光是否有变化	100%	正常	
 调节背光为50	 手动	调节背光为50，判断背光是否有变化	100%	正常	
 调节背光为100	 手动	调节背光为100，判断背光是否有变化	100%	正常	
 OCR扫描	 手动	正常供电 扫描，请听音频，看屏是否有显示	100%	正常	
 低电OCR扫描	 手动	供电 3.5V 扫描，请听音频，看屏是否有显示	100%	正常	
 高电OCR扫描	 手动	供电 5V扫描，请听音频，看屏是否有显示	100%	正常	
 效准触摸	 手动	调节背光为20，判断背光是否有变化	100%	正常	

====================================

Test Log:
-----------------------------------
表格已复位到初始状态
连接BLU设备...
设备连接成功
已读取校准因子
已切换到源表模式
已设置源电压为 4V
已打开DUT电源
创建测试线程...
测试线程已启动，请等待...
自动化测试开始
开始测试行 0 (ID: scan_sn): 扫码SN
================== scan_sn==================
开始测试行 1 (ID: A1_): 烧录ap
================== A1_==================
开始测试行 2 (ID: A2_): 烧录cp
================== A2_==================
开始测试行 3 (ID: A3_): 烧录资源
================== A3_==================
开始测试行 4 (ID: B1): 检测adb设备
================== B1==================
正在检测ADB设备...
检测到ADB设备: 
检测到1个设备:
- 0000000000000000

开始测试行 5 (ID: C2): 快速上下电（100ms）
================== C2==================
正在检测ADB设备...
检测到ADB设备: 
检测到1个设备:
- 0000000000000000

开始测试行 6 (ID: E1): 供电3.5V读取静态功耗
================== E1==================
已设置源电压为3.5V
开始连续测量...
读取到原始数据: 800768 字节
平均电流: 220.379 mA
电源电压: 3.500 V
功耗: 771.327 mW
电流测试通过: 平均电流小于180mA
已完成行 6: 测量电流
开始测试行 7 (ID: E2): 供电4V读取静态功耗
================== E2==================
已设置源电压为4V
开始连续测量...
读取到原始数据: 800768 字节
平均电流: 211.328 mA
电源电压: 4.000 V
功耗: 845.311 mW
电流测试通过: 平均电流小于180mA
已完成行 7: 测量电流
开始测试行 8 (ID: E3): 供电5V读取静态功耗
================== E3==================
已设置源电压为5V
开始连续测量...
读取到原始数据: 802816 字节
平均电流: 200.702 mA
电源电压: 5.000 V
功耗: 1003.508 mW
电流测试通过: 平均电流小于180mA
已完成行 8: 测量电流
开始测试行 9 (ID: D1): 供电3.5V开发板上电时间
================== D1==================
已设置源电压为 3500 mV
串口已打开: COM13
上电耗时: 81 ms
开始测试行 10 (ID: D2): 供电4V开发板上电时间
================== D2==================
已设置源电压为 4000 mV
串口已打开: COM13
上电耗时: 82 ms
开始测试行 11 (ID: D2): 供电5V开发板上电时间
================== D2==================
已设置源电压为 4000 mV
串口已打开: COM13
上电耗时: 82 ms
开始测试行 12 (ID: E5): 满载的静态功耗
================== E5==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_enter_age

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
满载设置成功
开始连续测量...
读取到原始数据: 808960 字节
平均电流: 219.604 mA
电源电压: 4.000 V
功耗: 878.415 mW
电流测试通过: 平均电流小于180mA
已完成行 12: 测量电流
开始测试行 13 (ID: E4): 息屏的静态功耗
================== E4==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_backlight_cmd on

test_backlight_cmd

打开背光

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
背光设置成功
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_backlight_cmd set 0

test_backlight_cmd

设置背光亮度: 0

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
背光设置成功 0
开始连续测量...
读取到原始数据: 804864 字节
平均电流: 138.171 mA
电源电压: 4.000 V
功耗: 552.686 mW
电流测试通过: 平均电流小于180mA
已完成行 13: 测量电流
开始测试行 14 (ID: F1): 软件复位
================== F1==================
正在软复位...
串口已打开: COM13
收到数据: I:Initializing app(taskbar
收到数据: )
D:app(uuid:0 ID:1:taskbar) register successful

收到数据: V:app(taskbar) in
收到数据: it success
I:Initializing app(launcher)
D:app(uuid:1 ID:0:Launch
收到数据: er) register successful
I:app(Launcher) create success
I:[228:a
收到数据: pp_launcher_enter] enter
I:app(Launcher) enter success
V:app(launcher) init success
I:Initializing app(template)
D:app(uuid:2 ID:18:模板) register successful
V:app(template) init success
I:
收到数据: Initializing app(ocr)
D:app(uuid:3 ID:3:扫描) register success
收到数据: ful
V:app(ocr) init success
I:Initializing app(dictionary)
D:app(uuid:4 ID:7:词典) register successful
V:app(dictionary) ini
收到数据: t success
I:Initializing app(calibration)
D:app(uuid:5 ID:4:校准) register successful
V:app(calibration) init success
I:Initializing app(sentence_eva)
D:app(uuid:6 ID:12:评测) register successful
V:app(sentence_eva) init success
I:Initializing app(de
收到数据: mo)
D:app(uuid:7 ID:2:测试) register successful
V:app(demo) i
收到数据: nit success
I:Initializing app(audio_player)
D:app(uuid:8 ID:8:播放器) register successful
V:app(audio_player) init success

收到数据: I:Initializing app(voice)
D:app(uuid:9 ID:14:语音) register su
收到数据: ccessful
V:app(voice) init success
I:Initializing app(setting)
D:app(uuid:10 ID:13:设置) register successful
V:app(setting) init success
INF:event <0 1>  wifi init done

INF:WiFi IPC Done
INF:mac: 00-7f-7f-25-b8-e1

收到数据: [36;22mI/adb.core        [00:00:02.190 1 adb_rx] adb open, remo
收到数据: te_id:1844, name:shell:test_reboot_cmd
[0m
[36;22mI/adb.sh   
收到数据:        [00:00:02.191 1 adb_rx] adb shell open, local_id:100, remote_id:1844
[0m
[36;22mI/adb.sh          [00:00:02.191 1 adb_rx] shell args: test_reboot_cmd
[0m
[36;22mI/adb.srv         
收到数据: [00:00:02.191 1 adb_rx] service open success, idx: 0, local_id: 
收到数据: 100, remote_id: 1844, handle: shell
[0m
[36;22mI/adb.core        [00:00:02.191 1 adb_rx] adb open, local_id:100
[0m

收到数据: [36;22mI/adb.sh          [00:00:02.241 1 shell_task] adb shell 
收到数据: task start, arg:0x28b69e78
[0m

命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_reboot_cmd
收到数据: 
********Arcs SDK@V0.0.6-13-g6025a841-dirty-@v0.0.6********
Runn
收到数据: ing on hart-id: 1

收到数据: [36;22mI/elog            [00:00:00.000 1 elog_async] EasyLogger
收到数据:  V2.2.99 is initialize success.[0m
[36;22mI/NO_TAG          [
收到数据: 00:00:00.001 1 main] Pen application start...[0m

收到数据: [36;22mI/NO_TAG          [00:00:00.001 1 main] Wait ic message connect...[0m
[36;22mI/NO_TAG          [00:00:00.003 1 main]
收到数据:  ic message init done[0m

收到数据: [36;22mI/NO_TAG          [00:00:00.008 1 main
收到数据: ] [ocr] lis_ocr_init ok[0m
[36;22mI/NO_TAG          [00:00:00
收到数据: .008 1 main] OCR service init completed[0m
[XttsStream::api] XttsStream_ctor

[XttsStream::api] XttsStream_
收到数据: register

[XttsStream::api] XttsStream_open

[36;22mI/NO_TAG 
收到数据:          [00:00:00.015 1 main] TTS service init completed[0m

收到数据: [36;22mI/NO_TAG          [00:00:00.017 1 main] Translate servic
收到数据: e init completed[0m
[36;22mI/NO_TAG          [00:00:00.018 1 
收到数据: main] OCR image stream init completed[0m
INF:Service algo fron
收到数据: tend started
INF:Service algo backend started

收到数据: INF:Controller event task(ctrl_evt_task_0)started

收到数据: INF:Controller event task(ctrl_evt_task_1)started

收到数据: INF:Controller event task(ctrl_evt_task_2)started

收到数据: [36;22mI/NO_TAG          [00:00:00.026 1 main] Pen controller p
收到数据: re init completed![0m

收到数据: lite_dac.zero:0x288dbca0
TinyUSB initialized
收到数据: [36;22mI/adb.srv         [00:00:00.089 1 usb_task] service hand
收到数据: le register success, name: shell
[0m
[36;22mI/adb.srv        
收到数据:  [00:00:00.089 1 usb_task] service handle register success, name: sync
[0m
/SD: mounted successfully
INF:disk init succeeded, sector count:61079551, sector size:
收到数据: 512
INF:disk mem inited
TCP IP MBOX SIZE 10
TCP TX WIN 46720
TCP RX WIN 23360
TCP MSS 1460
INF:WiFi IPC startup ...

Welcom
收到数据: e to
 _     _       _                   _    _____
| |   (_)--
收到数据: ---. |  .-----.-----.  / \  |_____|
| |   | |  ___| |__|  _  |     | / _ \   | |
| |___| |____ |  __|   __|  |  |/ /_\ \ _| |_
收到数据: 
|_____|_|_____|____|_____|__|__|_/   \_\_|_|_|

Build on: LA
收到数据: PTOP-103rnRelease version: 20250402-195929
ListenAI>
收到数据: INF:base path: /SD:/
INF:file path: test_wx_enc.db

收到数据: INF:get_dict_ver_info :{"id":"1","soft_ver":[1,1,0],"dict_ver":[
收到数据: 1,0,1],"res_ver":[1,0,0]}

[wordseg]version:WordSegmentation_q3s 2.0.17


收到数据: [36;22mI/adb.dev         [00:00:00.533 1 usb_task] Opening ADB interface, number: 0, endpoints: 2
[0m
INF:EP3 (dir=1) TX FIFO address is 0x48, size is 0x200
[36;22mI/adb.dev         [00:00:00.533 1 usb_task] Configured ADB interface: IN EP 0x83, OUT EP 0x02
[0m

收到数据: hash res crc:b225f858

软复位测试通过：检测到版本信息
开始测试行 15 (ID: F2): 看门狗复位
================== F2==================
正在软复位...
串口已打开: COM13
收到数据: [36;22mI/adb.core        [00:00:01.239 1 adb_rx] adb connecting, remote info, version:1000001, max payload:1048576
[0m

收到数据: [36;22mI/adb.core        [00:00:01.298 1 adb_rx] adb open, remo
收到数据: te_id:1847, name:shell:test_wdt_enable 1000
[0m
[36;22mI/adb.
收到数据: sh          [00:00:01.298 1 adb_rx] adb shell open, local_id:100
收到数据: , remote_id:1847
[0m
[36;22mI/adb.sh          [00:00:01.299 1
收到数据:  adb_rx] shell args: test_wdt_enable 1000
[0m
[36;22mI/adb.srv         [00:00:01.299 1 adb_rx] service open success, idx: 0, 
收到数据: local_id: 100, remote_id: 1847, handle: shell
[0m
[36;22mI/ad
收到数据: b.core        [00:00:01.299 1 adb_rx] adb open, local_id:100
[0m

收到数据: [36;22mI/adb.sh     
收到数据:      [00:00:01.349 1
收到数据:  shell_task] adb 
收到数据: shell task start, a
收到数据: rg:0x288f5284
[0m

收到数据: [36;22mI/adb.srv         [00:00:01.599 1 adb_rx] adb service cl
收到数据: ose, local_id: 100, remote_id: 1847, 0x20015e8c
[0m
[36;22mI/
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_wdt_enable 1000

===== WDT Test =====

WDT enabled 

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
收到数据: adb.sh          [00:00:01.599 1 adb_rx] adb shell close, 0x20015e8c
[0m
[36;22mI/adb.srv         [00:00:01.599 1 adb_rx] adb service close, 0x30e7e820, 0x30e150a4
[0m
[36;22mI/adb.core  
收到数据:       [00:00:01.600 1 adb_rx] adb close, local_id:100, remote_id:1847
[0m
[36;22mI/adb.srv         [00:00:01.600 1 adb_rx] ad
收到数据: b service close, local_id: 100, remote_id: 1847, 0x0
[0m
[36;22mI/adb.core        [00:00:01.600 1 adb_rx] adb close, local_id
收到数据: :100, remote_id:1847
[0m
[36;22mI/adb.srv         [00:00:01.6
收到数据: 00 1 adb_rx] adb service close, local_id: 100, remote_id: 1847, 0x0
[0m

收到数据: data res crc:df6b7e55
[wordseg]malloc PSRAM: sizeof(ws_engine_t)
收到数据:  = 2108, p=0x288f4280
[wordseg]malloc PSRAM: ws_engine->result s
收到数据: ize=7976, p=0x288f4ac0
[wordseg]malloc PSRAM: ws_engine->resident_buf size=11616, p=0x288f9440
[wordseg]malloc PSRAM: ws_engine-
收到数据: >tmp_buf size=189588, p=0x288fc1c0

收到数据: [wordseg]malloc P
收到数据: SRAM: read_sd_res_buf size=2788, p=0x288f8420
[wordseg] wordseg_init_entry exit. used time=4 ms
INF:Create pen vi
收到数据: ew success
收到数据: !
INF:Lsize 1858949

收到数据: [36;22mI/lisa_evs_app    [00:00:01.651 1 evaluate_thread] send 
收到数据: evaluate begin, sleep time 16ms[0m
[36;22mI/lisa_evs_app    [
收到数据: 00:00:01.652 1 main] Create lisa evs ctx success![0m
[36;22mI
收到数据: /NO_TAG          [00:00:01.652 1 main] Pen controller post init completed![0m

收到数据: INF:WiFi IPC Done

收到数据: INF:mac: 00-dc-7f-25-bf-71

收到数据: INF:event <0 1>  wifi init done


收到数据: I:Initializing app(taskbar)
D:app(uuid:0 
收到数据: ID:1:taskbar) register successful
V:app(taskbar) init success
I
收到数据: :Initializing app(launcher)
D:app(uuid:1
收到数据:  ID:0:Launcher) regis
收到数据: ter successful
I:app(Launcher) create success
I:[228:app_launch
收到数据: er_enter] enter
I:app(Launcher) enter success
V:app(launcher) in
收到数据: it success
I:Initializing app(template)
D:app(uuid:2 ID:18:模��
收到数据: �) register successful
V:app(template) init success
I:Initializ
收到数据: ing app(ocr)
D:app(uuid:3 ID:3:扫描) register successful
V:ap
收到数据: p(ocr) init success
I:Initializing app(dictionary)
D:app(uuid:4 ID:7:词典) register successful
V:app(dictionary) init success
收到数据: 
I:Initializing app(calibration)
D:app(uuid:5 ID:4:校准) regis
收到数据: ter successful
V:app(calibration) init success
I:Initializing app(sentence_eva)
D:app(uuid:6 ID:12:评测) register successful
V:app(sentence_eva) init success
I:Initializing app(demo)
D:app
收到数据: (uuid:7 ID:2:测试) register successful
V:app(demo) init succe
收到数据: ss
I:Initializing app(audio_player)
D:app(uuid:8 ID:8:播放器)
收到数据:  register successful
V:app(audio_player) init success
I:Initial
收到数据: izing app(voice)
D:app(uuid:9 ID:14:语音) register successful

收到数据: 
V:app(voice) init success
I:Initializing app(setting)
D:app(uui
收到数据: d:10 ID:13:设置) register successful
V:app(setting) init success

收到数据: 
********Arcs SDK@V0.0.6-13-g6025a841-dirty-@v0.0.6********
Runn
收到数据: ing on hart-id: 1

收到数据: [36;22mI/elog            [00:00:00.000 1 elog_async] EasyLogger
收到数据:  V2.2.99 is initialize success.[0m
[36;22mI/NO_TAG          [
收到数据: 00:00:00.001 1 main] Pen application start...[0m

收到数据: [36;22mI/NO_TAG          [00:00:00.001 1 main] Wait ic message 
收到数据: connect...[0m
[36;22mI/NO_TAG          [00:00:00.003 1 main] 
收到数据: ic message init done[0m

收到数据: [36;22mI/NO_TAG          [00:00:00.008 1 main] [ocr
收到数据: ] lis_ocr_init ok[0m
[36;22mI/NO_TAG          [00:00:00.008 1
收到数据:  main] OCR service init completed[0m
[XttsStream::api] XttsStr
收到数据: eam_ctor

[XttsStream::api] XttsStream_register

收到数据: 
[XttsStream::api] XttsStream_open


收到数据: [36;22mI/NO_TAG          [00:00:00.015 1 main] TTS service init
收到数据:  completed[0m
[36;22mI/NO_TAG          [00:00:00.017 1 main] 
收到数据: Translate service init completed[0m
[36;22mI/NO_TAG          
收到数据: [00:00:00.018 1 main] OCR image stream init completed[0m
INF:S
收到数据: ervice algo frontend started
INF:Service algo backend started

收到数据: INF:Controller even
收到数据: t task(ctrl_evt_task_0)started

收到数据: INF:Controller event
收到数据:  task(ctrl_evt_task_1)started

收到数据: INF:Controller event ta
收到数据: sk(ctrl_evt_task_2)started
[36;22mI/NO_TAG          [00:00:00.0
收到数据: 26 1 main] Pen controller pre init complete
收到数据: d![0m

收到数据: lite_dac.zero:0x288dbca0
TinyUSB initialized
收到数据: [36;22mI/adb.srv         [00:00:00.088 1 usb_task] service hand
收到数据: le register success, name: shell
[0m
[36;22mI/adb.srv        
收到数据:  [00:00:00.088 1 usb_task] service 
收到数据: handle register success, name: sync
[0m
/SD: mounted successfully
INF:disk init succeeded, sector count:61079551, sector size:
收到数据: 512
INF:disk mem inited
TCP IP MBOX SIZE 10
TCP TX WIN 46720
T
收到数据: CP RX WIN 23360
TCP MSS 1460
INF:WiFi IPC startup ...

Welcom
收到数据: e to
 _     _       _                   _    _____
| |   (_)--
收到数据: ---. |  .-----.-----.  / \  |_____|
|
收到数据:  |   | |  ___| |__|  _  |     | / _ \   | |
| |___| |____ |  __|   __|  |  |/ /_\ \ _| |_
收到数据: 
|_____|_|_____|____|_____|__|__|_/   \_\_|_|_|

Build on: LA
收到数据: PTOP-103rnRelease version: 20250402-195929
ListenAI>INF:base pa
收到数据: th: /SD:/

收到数据: INF:file path: test_wx_enc.db

收到数据: INF:get_dict_ver_info :{"id":"1","soft_ver":[1,1,0],"dict_ver":[
收到数据: 1,0,1],"res_ver":[1,0,0]}

[wordseg]version:WordSegmentation_q3s 2.0.17


收到数据: [36;22mI/adb.dev         [00:00:00.524 1 usb_task] Opening ADB interface, number: 0, endpoints: 2
[0m
INF:EP3 (dir=1) TX FIFO address is 0x48, size is 0x200
[36;22mI/adb.dev         [00:00:00.524 1 usb_task] Configured ADB interface: IN EP 0x83, OUT EP 0x02
[0m

收到数据: hash res crc:b225f858

收到数据: [36;22mI/adb.core        [00:00:00.651 1 adb_rx] adb connecting
收到数据: , remote info, version:1000001, max payload:1048576
[0m

软复位测试通过：检测到版本信息
开始测试行 16 (ID: G1): WIFI 扫描
================== G1==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_wifi_cmd scan

test_wifi_cmd已处理完成

** 开始执行 WiFi 扫描功能 **

开始 WiFi 扫描...

扫描开始，等待扫描完成...

扫描完成，正在获取结果...

Got 16 scan results

index[00]: channel 11, bssid 44:32:62:1B:E4:DE, rssi  -78, auth WPA2-PSK SSID ChinaNet-ZhPP

index[01]: channel 11, bssid B4:14:E6:EC:9F:30, rssi  -69, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[02]: channel 11, bssid B4:14:E6:EC:9F:31, rssi  -70, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[03]: channel 11, bssid B4:14:E6:EC:9E:11, rssi  -70, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[04]: channel 11, bssid 70:C6:DD:38:CA:81, rssi  -75, auth WPA2-PSK SSID H3C_38CA7F

index[05]: channel 11, bssid B4:14:E6:EC:9E:10, rssi  -68, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[06]: channel 06, bssid B4:14:E6:EC:9E:71, rssi  -62, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[07]: channel 06, bssid B4:14:E6:EC:9E:70, rssi  -63, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[08]: channel 04, bssid 3C:CD:57:F4:D5:6A, rssi  -43, auth WPA2-PSK SSID Xiaomi_listenai_2.4G

index[09]: channel 01, bssid B4:14:E6:EC:A0:B0, rssi  -68, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[10]: channel 01, bssid B4:14:E6:EB:6B:11, rssi  -72, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[11]: channel 01, bssid CC:B5:D1:31:E4:79, rssi  -62, auth Open SSID Qingping Air Monitor Lite-31E47

index[12]: channel 01, bssid B4:14:E6:EB:6B:10, rssi  -71, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[13]: channel 01, bssid 00:28:F8:09:F5:79, rssi  -74, auth WPA2-PSK/WPA-PSK SSID WHEELTEC_orinsuper_humble_jp62

index[14]: channel 01, bssid 34:96:72:E7:8E:20, rssi  -53, auth WPA2-PSK/WPA-PSK SSID listenai_iot_2.4G

index[15]: channel 01, bssid D4:35:38:A3:E0:6F, rssi  -53, auth WPA2-PSK/WPA-PSK SSID listenai_develop_test

WiFi 扫描结果显示完成

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
解析到SSID: ChinaNet-ZhPP

index[01]: channel 11, bssid B4:14:E6:EC:9F:30, rssi  -69, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[02]: channel 11, bssid B4:14:E6:EC:9F:31, rssi  -70, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[03]: channel 11, bssid B4:14:E6:EC:9E:11, rssi  -70, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[04]: channel 11, bssid 70:C6:DD:38:CA:81, rssi  -75, auth WPA2-PSK SSID H3C_38CA7F

index[05]: channel 11, bssid B4:14:E6:EC:9E:10, rssi  -68, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[06]: channel 06, bssid B4:14:E6:EC:9E:71, rssi  -62, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[07]: channel 06, bssid B4:14:E6:EC:9E:70, rssi  -63, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[08]: channel 04, bssid 3C:CD:57:F4:D5:6A, rssi  -43, auth WPA2-PSK SSID Xiaomi_listenai_2.4G

index[09]: channel 01, bssid B4:14:E6:EC:A0:B0, rssi  -68, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[10]: channel 01, bssid B4:14:E6:EB:6B:11, rssi  -72, auth WPA2-PSK/WPA-PSK SSID listenai.com-Guest

index[11]: channel 01, bssid CC:B5:D1:31:E4:79, rssi  -62, auth Open SSID Qingping Air Monitor Lite-31E47

index[12]: channel 01, bssid B4:14:E6:EB:6B:10, rssi  -71, auth WPA2-PSK/WPA-PSK SSID listenai.com

index[13]: channel 01, bssid 00:28:F8:09:F5:79, rssi  -74, auth WPA2-PSK/WPA-PSK SSID WHEELTEC_orinsuper_humble_jp62

index[14]: channel 01, bssid 34:96:72:E7:8E:20, rssi  -53, auth WPA2-PSK/WPA-PSK SSID listenai_iot_2.4G

index[15]: channel 01, bssid D4:35:38:A3:E0:6F, rssi  -53, auth WPA2-PSK/WPA-PSK SSID listenai_develop_test

WiFi 扫描结果显示完成

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止], RSSI: -78
WiFi测试不通过: 未检测到gxw网络
开始测试行 17 (ID: G2): 自播自录
================== G2==================
正在测试ADB文件传输...
开始ADB push测试...
推送结果: ./audio_1khz_3s.mp3: 1 file pushed, 0 skipped. 70.6 MB/s (14652 bytes in 0.000s)

命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_seeding_cmd

启动MP3播放和录音...

开始录音线程

ADC初始化成功

MICChecker初始化成功

ADC录音启动

播放线程启动: /SD:/adb/audio_1khz_3s.mp3

等待5秒...

文件读取完成，总共读取: 14652 字节

播放线程结束

播放开始

播放结束，停止录音

正在停止录音...

ADC录音停止

录音读取错误或超时: 0

麦克风检测详细结果: [1. The check of max frequency of single mic is pass]

[2. The harmonic of single mic is not pass!

通道[0]测量值:

  目标频率值(m_fTargetValue): 39.34

  奇次谐波值(m_fNoiseValue_ji): 1.24

  偶次谐波值(m_fNoiseValue_ou): 16.17

  最大分贝(m_fMaxDB): 40.90 dB

  最小分贝(m_fMinDB): 13.02 dB

  最大频率(m_nMaxFreq): 976 Hz



通道[1]测量值:

  目标频率值(m_fTargetValue): 39.34

  奇次谐波值(m_fNoiseValue_ji): 1.24

  偶次谐波值(m_fNoiseValue_ou): 16.17

  最大分贝(m_fMaxDB): 40.90 dB

  最小分贝(m_fMinDB): 13.02 dB

  最大频率(m_nMaxFreq): 976 Hz



通道[2]测量值:

  目标频率值(m_fTargetValue): 0.00

  奇次谐波值(m_fNoiseValue_ji): 0.00

  偶次谐波值(m_fNoiseValue_ou): 0.00

  最大分贝(m_fMaxDB): -inf dB

  最小分贝(m_fMinDB): 0.00 dB

  最大频率(m_nMaxFreq): 976 Hz



通道[3]测量值:

  目标频率值(m_fTargetValue): 0.00

  奇次谐波值(m_fNoiseValue_ji): 0.00

  偶次谐波值(m_fNoiseValue_ou): 0.00

  最大分贝(m_fMaxDB): -inf dB

  最小分贝(m_fMinDB): 0.00 dB

  最大频率(m_nMaxFreq): 976 Hz

麦克风质量检测: 不通过, 错误码: 0xe

录音完成，总共录制: 20224 样本

播放和录音全部完成

麦克风质量检测最终结果: 不通过

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
开始测试行 18 (ID: B2): adb push  pull (20MB)
================== B2==================
正在测试ADB文件传输...
开始ADB push测试...
推送结果: ./test_push.bin: 1 file pushed, 0 skipped. 2.8 MB/s (20971520 bytes in 7.146s)

开始ADB pull测试...
拉取结果: /RAW/SDRAW/40000000/1400000: 1 file pulled, 0 skipped. 2.9 MB/s (20971520 bytes in 6.911s)

原始MD5: e59ee84fc5710391fd7c8d47676b695b
下载MD5: e59ee84fc5710391fd7c8d47676b695b
已删除测试文件: ./test_pull.bin
开始测试行 19 (ID: S0): 准备进入手动模式
================== S0==================
测试通过: 准备进入手动模式 (行19)
开始测试行 20 (ID: S1): 调节背光为20
================== S1==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_backlight_cmd set 20

test_backlight_cmd

设置背光亮度: 20

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
背光设置成功: 
测试通过: 调节背光为20 (行20)
开始测试行 21 (ID: S2): 调节背光为50
================== S2==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_backlight_cmd set 50

test_backlight_cmd

设置背光亮度: 50

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
背光设置成功: 
测试通过: 调节背光为50 (行21)
开始测试行 22 (ID: S3): 调节背光为100
================== S3==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_backlight_cmd set 100

test_backlight_cmd

设置背光亮度: 100

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
背光设置成功: 
测试通过: 调节背光为100 (行22)
开始测试行 23 (ID: S4): OCR扫描
================== S4==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_down

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_up

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
测试通过: OCR扫描 (行23)
开始测试行 24 (ID: S4_1): 低电OCR扫描
================== S4_1==================
已设置源电压为3.5V
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_down

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_up

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
测试通过: 低电OCR扫描 (行24)
开始测试行 25 (ID: S4_2): 高电OCR扫描
================== S4_2==================
已设置源电压为3.5V
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_down

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_up

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
测试通过: 高电OCR扫描 (行25)
开始测试行 26 (ID: S5): 效准触摸
================== S5==================
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_caliaration_cmd enter

test_ocr_caliaration

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
测试通过: 效准触摸 (行26)
命令输出: 
[2J[1H

 _         _   _                  _          _ _ 

| |    ___| |_| |_ ___ _ __   ___| |__   ___| | |

| |   / _ \ __| __/ _ \ '__| / __| '_ \ / _ \ | |

| |__|  __/ |_| ||  __/ |    \__ \ | | |  __/ | |

|_____\___|\__|\__\___|_|    |___/_| |_|\___|_|_|



Build:       Apr 24 2025 14:29:05

Version:     3.2.4

Copyright:   (c) 2020 Letter



letter:/$ test_ocr_caliaration_cmd close

test_ocr_caliaration

Return: 0, 0x00000000



letter:/$ 
[检测到Return关键字，命令已被终止]
所有测试已完成
测试线程已完成
关闭DUT电源
测试完成